import { SignInButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  console.log(user);

  if (!user) return null;

  return (
    <div className="flex w-full gap-2">
      <img
        src={user.profileImageUrl}
        alt="User's Profile Image"
        className=" h-14 w-14 rounded-full"
      />

      <input
        className="grow bg-inherit outline-none"
        placeholder="Type some emojis!"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;

  return (
    <div key={post.id} className=" flex gap-2 border-b border-slate-400 p-4">
      <img
        src={author.profileImageUrl}
        alt="Image of the Author"
        className="h-14 w-14 rounded-full"
      />

      <div className="flex flex-col">
        <div className="flex  gap-1">
          <span>{`@${author.username}`}</span>
          <span className="font-thin">Â·</span>
          <span className="font-thin">{dayjs(post.createdAt).fromNow()}</span>
        </div>

        <div>
          <span>{post.content}</span>
        </div>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });

  const user = useUser();

  const { data: posts, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) {
    return <div>Loading..........</div>;
  }

  if (!posts) {
    return <div> Something went wrong! ðŸ¥º </div>;
  }

  console.log(posts);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex h-screen justify-center">
        <div className=" w-full  border-x border-s-slate-400 md:max-w-2xl">
          <div className="flex border-b border-slate-400 p-4">
            {user.isSignedIn ? <CreatePostWizard /> : <SignInButton />}
          </div>

          <div>
            {posts?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
